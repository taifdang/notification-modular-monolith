// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareCommon.Data;

#nullable disable

namespace API.Topup.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250619151405_add_tbl_settings_and_constraint")]
    partial class add_tbl_settings_and_constraint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShareCommon.Model.HubConnection", b =>
                {
                    b.Property<int>("hub_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hub_id"));

                    b.Property<string>("hub_connection_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hub_user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hub_id");

                    b.ToTable("hub_connection");
                });

            modelBuilder.Entity("ShareCommon.Model.InboxNotification", b =>
                {
                    b.Property<Guid>("inotify_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("inotify_created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("inotify_event_type")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("inotify_payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inotify_source")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("inotify_updated_at")
                        .HasColumnType("datetime2");

                    b.Property<byte>("itopup_status")
                        .HasColumnType("tinyint");

                    b.HasKey("inotify_id");

                    b.ToTable("inbox_notification");
                });

            modelBuilder.Entity("ShareCommon.Model.InboxTopup", b =>
                {
                    b.Property<int>("itopup_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("itopup_created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("itopup_error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itopup_event_type")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("itopup_payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itopup_source")
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("itopup_status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("itopup_updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("itopup_id");

                    b.ToTable("inbox_topup");
                });

            modelBuilder.Entity("ShareCommon.Model.Messages", b =>
                {
                    b.Property<int>("mess_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mess_id"));

                    b.Property<DateTime>("mess_created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("mess_event_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("mess_event_type")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("mess_payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mess_source")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("mess_user_id")
                        .HasColumnType("int");

                    b.HasKey("mess_id");

                    b.HasIndex("mess_user_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("ShareCommon.Model.OutboxTopup", b =>
                {
                    b.Property<int>("otopup_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("otopup_id"));

                    b.Property<DateTime>("otopup_created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("otopup_event_type")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("otopup_payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("otopup_source")
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("otopup_status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("otopup_updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("otopup_id");

                    b.ToTable("outbox_topup");
                });

            modelBuilder.Entity("ShareCommon.Model.Settings", b =>
                {
                    b.Property<int>("set_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("set_id"));

                    b.Property<bool>("disable_notification")
                        .HasColumnType("bit");

                    b.Property<int>("set_user_id")
                        .HasColumnType("int");

                    b.HasKey("set_id");

                    b.HasIndex("set_user_id")
                        .IsUnique();

                    b.ToTable("settings");
                });

            modelBuilder.Entity("ShareCommon.Model.Topup", b =>
                {
                    b.Property<int>("topup_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("topup_id"));

                    b.Property<DateTime>("topup_created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("topup_creator")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("topup_source")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("topup_tranfer_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("topup_trans_id")
                        .HasColumnType("int");

                    b.HasKey("topup_id");

                    b.ToTable("topup");
                });

            modelBuilder.Entity("ShareCommon.Model.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<bool>("is_block")
                        .HasColumnType("bit");

                    b.Property<decimal>("user_balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("user_email")
                        .HasColumnType("varchar(180)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("user_password")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("user_phone")
                        .HasColumnType("varchar(12)");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ShareCommon.Model.Messages", b =>
                {
                    b.HasOne("ShareCommon.Model.Users", "users")
                        .WithMany("messages")
                        .HasForeignKey("mess_user_id");

                    b.Navigation("users");
                });

            modelBuilder.Entity("ShareCommon.Model.Settings", b =>
                {
                    b.HasOne("ShareCommon.Model.Users", "users")
                        .WithOne("settings")
                        .HasForeignKey("ShareCommon.Model.Settings", "set_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("ShareCommon.Model.Users", b =>
                {
                    b.Navigation("messages");

                    b.Navigation("settings");
                });
#pragma warning restore 612, 618
        }
    }
}
