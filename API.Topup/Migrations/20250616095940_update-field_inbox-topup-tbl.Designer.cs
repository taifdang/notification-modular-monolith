// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareCommon.Data;

#nullable disable

namespace API.Topup.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250616095940_update-field_inbox-topup-tbl")]
    partial class updatefield_inboxtopuptbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShareCommon.Model.InboxNotification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("event_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("message_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("processed_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("retry")
                        .HasColumnType("int");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("inbox_notification");
                });

            modelBuilder.Entity("ShareCommon.Model.InboxTopup", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("process_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("transaction_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("inbox_topup");
                });

            modelBuilder.Entity("ShareCommon.Model.Messages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("event_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("ShareCommon.Model.OutboxTopup", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("event_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("processed_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("outbox_topup");
                });

            modelBuilder.Entity("ShareCommon.Model.Transactions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("tranfer_amount")
                        .HasColumnType("decimal(20,2)");

                    b.Property<int>("transaction_id")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("ShareCommon.Model.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(20,2)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
