// <auto-generated />
using Hookpay.Modules.Users.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hookpay.Modules.Users.Core.Data.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hookpay.Modules.Users.Core.Users.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<bool>("is_block")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("user_balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("user_email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(108)
                        .HasColumnType("nvarchar(108)")
                        .HasDefaultValue("");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValue("");

                    b.Property<string>("user_password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("user_phone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("user_id");

                    b.HasIndex("user_email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("Hookpay.Modules.Users.Core.Users.Models.UserSetting", b =>
                {
                    b.Property<int>("set_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("set_id"));

                    b.Property<bool>("disable_notification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("set_user_id")
                        .HasColumnType("int");

                    b.HasKey("set_id");

                    b.HasIndex("set_user_id")
                        .IsUnique();

                    b.ToTable("settings");
                });

            modelBuilder.Entity("Hookpay.Modules.Users.Core.Users.Models.UserSetting", b =>
                {
                    b.HasOne("Hookpay.Modules.Users.Core.Users.Models.User", "users")
                        .WithOne("settings")
                        .HasForeignKey("Hookpay.Modules.Users.Core.Users.Models.UserSetting", "set_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("Hookpay.Modules.Users.Core.Users.Models.User", b =>
                {
                    b.Navigation("settings");
                });
#pragma warning restore 612, 618
        }
    }
}
